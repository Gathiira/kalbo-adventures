# Generated by Django 3.2.7 on 2021-10-02 11:10

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('user_mapping', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='auth.group')),
                ('user_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='authentication.usercategory')),
            ],
        ),
        migrations.CreateModel(
            name='UserCategoryType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('model_name', models.CharField(blank=True, max_length=100, null=True)),
                ('serializer', models.CharField(blank=True, max_length=100, null=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_category_type', to='authentication.usercategory')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.CharField(max_length=255, unique=True)),
                ('full_name', models.CharField(max_length=255, null=True)),
                ('phone_number', models.CharField(max_length=250, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('profile_photo', models.CharField(blank=True, max_length=255, null=True)),
                ('enable_phone_notification', models.BooleanField(blank=True, null=True)),
                ('enable_email_notification', models.BooleanField(blank=True, null=True)),
                ('primary_role', models.CharField(blank=True, max_length=255, null=True)),
                ('identification_type', models.CharField(blank=True, max_length=255, null=True)),
                ('date_registered', models.DateTimeField(auto_now_add=True)),
                ('account_status', models.CharField(choices=[('ACTIVE', 'ACTIVE'), ('DEACTIVATED', 'DEACTIVATED'), ('SUSPENDED', 'SUSPENDED')], default='ACTIVE', max_length=255)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
                ('usertype', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='authentication.usercategorytype')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
